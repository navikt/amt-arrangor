amt-enhetsregister.url=${AMT_ENHETSREGISTER_URL}
amt-enhetsregister.scope=${AMT_ENHETSREGISTER_SCOPE}

amt-altinn.url=${AMT_ALTINN_URL}
amt-altinn.scope=${AMT_ALTINN_SCOPE}

amt-person.url=${AMT_PERSON_URL}
amt-person.scope=${AMT_PERSON_SCOPE}

publish.enabled=false

spring.main.banner-mode=off
server.shutdown=graceful

management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true
management.endpoint.health.probes.enabled=true
management.endpoint.health.group.liveness.include=livenessState
management.endpoints.web.base-path=/internal
management.endpoints.web.exposure.include=prometheus,health
management.prometheus.metrics.export.enabled=true

nais.env.azureAppClientId=${AZURE_APP_CLIENT_ID}
nais.env.azureAppJWK=${AZURE_APP_JWK}
nais.env.azureOpenIdConfigTokenEndpoint=${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}

no.nav.security.jwt.issuer.tokenx.discovery-url=${TOKEN_X_WELL_KNOWN_URL}
no.nav.security.jwt.issuer.tokenx.accepted-audience=${TOKEN_X_CLIENT_ID}
no.nav.security.jwt.issuer.azuread.discovery-url=${AZURE_APP_WELL_KNOWN_URL:#{null}}
no.nav.security.jwt.issuer.azuread.accepted-audience=${AZURE_APP_CLIENT_ID:#{null}}

no.nav.security.jwt.client.registration.amt-enhetsregister-tokenx.token-endpoint-url=${TOKEN_X_TOKEN_ENDPOINT}
no.nav.security.jwt.client.registration.amt-enhetsregister-tokenx.grant-type=urn:ietf:params:oauth:grant-type:token-exchange
no.nav.security.jwt.client.registration.amt-enhetsregister-tokenx.authentication.client-id=${TOKEN_X_CLIENT_ID}
no.nav.security.jwt.client.registration.amt-enhetsregister-tokenx.authentication.client-jwk=${TOKEN_X_PRIVATE_JWK}
no.nav.security.jwt.client.registration.amt-enhetsregister-tokenx.authentication.client-auth-method=private_key_jwt
no.nav.security.jwt.client.registration.amt-enhetsregister-tokenx.token-exchange.audience=${AMT_ENHETSREGISTER_TOKENX_CLIENT_ID}

spring.datasource.url=jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_DATABASE}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.hikari.maximum-pool-size=3

kafka.auto-offset-reset=earliest
